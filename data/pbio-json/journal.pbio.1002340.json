{
  "schema": "https://data.sciveyor.com/schema",
  "version": 5,
  "id": "doi:10.1371/journal.pbio.1002340",
  "doi": "10.1371/journal.pbio.1002340",
  "externalIds": [
    "pii:PBIOLOGY-D-15-01478",
    "pmid:26727152",
    "pmcid:PMC4699692"
  ],
  "license": "This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited",
  "licenseUrl": "http://creativecommons.org/licenses/by/4.0/",
  "dataSource": "Public Library of Science",
  "dataSourceUrl": "https://data.sciveyor.com/source/plos",
  "dataSourceVersion": 1,
  "type": "article",
  "title": "Microscopy Image Browser: A Platform for Segmentation and Analysis of Multidimensional Datasets",
  "authors": [
    {
      "name": "Ilya Belevich",
      "first": "Ilya",
      "last": "Belevich",
      "affiliation": "Electron Microscopy Unit, Institute of Biotechnology, University of Helsinki, Helsinki, Finland"
    },
    {
      "name": "Merja Joensuu",
      "first": "Merja",
      "last": "Joensuu",
      "affiliation": "Electron Microscopy Unit, Institute of Biotechnology, University of Helsinki, Helsinki, Finland"
    },
    {
      "name": "Darshan Kumar",
      "first": "Darshan",
      "last": "Kumar",
      "affiliation": "Electron Microscopy Unit, Institute of Biotechnology, University of Helsinki, Helsinki, Finland"
    },
    {
      "name": "Helena Vihinen",
      "first": "Helena",
      "last": "Vihinen",
      "affiliation": "Electron Microscopy Unit, Institute of Biotechnology, University of Helsinki, Helsinki, Finland"
    },
    {
      "name": "Eija Jokitalo",
      "first": "Eija",
      "last": "Jokitalo",
      "affiliation": "Electron Microscopy Unit, Institute of Biotechnology, University of Helsinki, Helsinki, Finland"
    }
  ],
  "journal": "PLOS Biology",
  "date": "2016-01-04",
  "volume": "14",
  "number": "1",
  "pages": "e1002340",
  "tags": [
    "Type/Community Page"
  ],
  "abstract": "Understanding the structure–function relationship of cells and organelles in their natural context requires multidimensional imaging. As techniques for multimodal 3-D imaging have become more accessible, effective processing, visualization, and analysis of large datasets are posing a bottleneck for the workflow. Here, we present a new software package for high-performance segmentation and image processing of multidimensional datasets that improves and facilitates the full utilization and quantitative analysis of acquired data, which is freely available from a dedicated website. The open-source environment enables modification and insertion of new plug-ins to customize the program for specific needs. We provide practical examples of program features used for processing, segmentation and analysis of light and electron microscopy datasets, and detailed tutorials to enable users to rapidly and thoroughly learn how to use the program.",
  "fullText": "Introduction\n\nImaging and image analysis are among the key methods in biosciences nowadays. The knowledge of complex 3-D structures of cells and cell organelles in their natural context is important for understanding the structure–function relationship. Moreover, statistical quantification of 3-D objects based on 2-D image information cannot be reliably made; therefore, segmentation, analysis, visualization, and comparison of whole 3-D volumetric datasets are required. Recently evolved 3-D/5-D light microscopy (LM) and electron microscopy (EM) techniques have enabled a new insight into the morphology of tissues, cells, and cell organelles that had not been conceivable before [1,2]. As the amount of collected data is exponentially increasing, the effectiveness of processing raw data into analyzed results has key importance. There are a number of both commercial (e.g., Amira and Imaris) and freeware image processing packages (e.g., ImageJ [3], Fiji [4], BioImageXD [5], IMOD [6], Ilastik [7], and 3D Slicer [8]) available. However, the performance and usability of image segmentation tools in most packages are still suboptimal, resulting in laborious and time-consuming workflows. Furthermore, with the wide range of software and applications used for data collection and image analysis, there is a clear need for open-access programs that can be adjusted according to the needs of a specific project as well as for cross communication between existing programs.\n\nHere, we present a new open-source software, Microscopy Image Browser (MIB) [9], that was designed for, but not limited to, easy and effective segmentation of multidimensional datasets, improving and facilitating the full utilization and quantitation of acquired data. MIB has a user-friendly graphical interface and is available for all common computer operating systems, either together with MATLAB (Windows, Linux, and Mac OS) or as a stand-alone package for Windows and Mac OS. At present, MIB has been utilized in more than ten different scientific projects, ranging from studies at the cellular level to those dealing with whole organisms; examples include projects on the endoplasmic reticulum (ER) and cytoskeletal filaments in cultured cells [10,11], the organ of Corti in mouse inner ear [12,13], the development of the sieve element in Arabidopsis thaliana root [14,15], and the characterization of cryptomonad Rhinomonas nottbecki n. sp. [16]. Although MIB was originally designed for the processing of relatively large EM datasets, it can be used for analysis of LM and any other microscopy datasets. Here, we provide several examples highlighting the various features of the program, and online tutorials have been made to provide detailed instructions on how to use them [17].\n\nMIB Recognizes a Large Number of Imaging Formats and Offers a Variety of Image Processing Tools\n\nThe output files from different microscopes and programs are routinely stored in proprietary formats, and access to the collected images and corresponding metadata after acquisition often requires customized software from the manufacturer. MIB overcomes this problem by offering reading capabilities of up to 100 microscopy image and video formats powered by custom-made MATLAB and Bio-Formats [18] readers (Fig 1A; see MIB home page for the full list [9]). MIB was designed as an image browser to allow fast access to individual image datasets for viewing and assembling into 3-D and 4-D stacks (X:Y:Color:Z or X:Y:Color:Time). Up to eight datasets can be simultaneously opened and synchronized, facilitating the comparison and analysis of data from different experiments. The processed images can be exported using most frequently used output formats (Fig 1A).\n\nQuantitative analysis and efficient segmentation of large or otherwise challenging datasets can be facilitated by preprocessing of images (Fig 1A): MIB can resize, flip, rotate, transpose, or crop the datasets as well as adjust brightness, contrast, and gamma settings. In all cases, the voxel (volume pixel) dimensions and the bounding box (exact coordinates of a data block in 3-D space) of the dataset are automatically controlled and adjusted with respect to the performed action. MIB also offers more advanced tools; for example, it has a tool to normalize intensities within the dataset. As intensity levels can easily fluctuate between different images, it is essential to normalize intensities prior to further processing. In many cases, normalization is done based on analysis of intensities of complete slices, while MIB offers additional options for normalization based on preselected areas, which allows normalization even for nonuniform images. Prefiltering of images, especially using anisotropic diffusion filters [19,20], facilitates the segmentation process because of simplification and noise reduction of the images (see MIB homepage for full list of available filters [9]). During a modelling workflow, the filters can be applied to certain arbitrarily shaped (rectangular, ellipsoidal, or polygonal) regions of interest. The alignment feature in MIB can be used to stitch together individual 3-D/4-D datasets while preserving and adjusting the voxel size and bounding box coordinates, correspondingly.\n\nMultiple Manual and Semiautomatic Tools Are Gathered Together to Enable Segmentation of Various Specimens and Objects of Interest\n\nBiological specimens vary greatly in regard to their shape, size, distribution, and intensity, thereby requiring multiple image segmentation procedures. The image segmentation in MIB combines manual and automatic approaches that may be further polished by filtering the segmented objects using quantification analysis (Fig 1B). This analysis can be easily performed on the shape or intensity properties of the resulting 2-D and 3-D objects. The main manual segmentation tools comprise of brush (normal or against superpixels [21] for faster selection), membrane click tracker (for tracing membrane profiles), magic wand and region growing, spot, and 3-D ball (S1 Video). When using these tools, the researcher interactively follows the modelling process slice by slice. To speed up the manual segmentation, MIB has shape and line interpolation algorithms that fill the gaps between objects drawn on two separated slices. The program also has several semiautomated routines, such as black and white thresholding, that can be applied to the entire dataset or to local selected (masked) area (S1 Video). Selection of such local areas is simple and usually done with the brush tool and the shape interpolation. This approach is especially useful for 3-D EM datasets, as the contrast differences are small and global thresholding (even with quantification filtering) is usually ineffective. The Frangi tubular filter [22] allows the detection of elongated, tubular structures in both 2-D and 3-D space, which is often useful for the segmentation of membranes or vessels.\n\nThe best suitable segmentation tool depends on the specimen, the imaging method, and the object of interest, and has to be found empirically. As an example, the brush tool was used for segmentation of individual Golgi cisternae (Fig 2A) and, in combination with shape interpolation, for segmentation of vesicles and ER (Fig 2A and 2B), while the line tracker tool was best suited for segmentation of microtubules (Fig 2B). Global thresholding and quantification filtering allow segmentation of high-contrast objects such as cytochemically stained ER (Fig 2C), whereas local thresholding combined with shape interpolation is better suited for segmentation of low-contrast objects such as different cell types in a tissue (Fig 2D). Use of semiautomated tools is essential for segmentation of large datasets and saves time, but as they are not applicable to all datasets, manual methods may be needed for segmentation of images with low-contrast variation, tightly packed areas, or heavily interconnected objects. Typically, modelling of a single dataset requires utilization of multiple segmentation methods. As an example, segmentation of different organelles in a densely packed mitotic cell, which has a high number of objects and is low contrast, is demonstrated by using basic MIB tools (Fig 2E; S1 Table).\n\nSegmentation of Large Datasets Is Challenging and Requires a Special Set of Tools\n\nRecent advances in both LM and EM have made it possible to acquire large volumetric datasets in a relatively easy manner. Those datasets may vary in size from moderately large volumes of up to 1,000 x 1,000 x 1,000 voxels to huge datasets of about three orders of magnitude higher (e.g., [23,24]). Manual segmentation of such datasets would be tedious, slow, and inefficient, and, as a result, a significant amount of high-quality data may stay unprocessed. Latest developments in image segmentation aim to minimize manual work by implementing automatic approaches of machine learning [25]. A promising example of the machine learning methods for image segmentation is the use of classifiers [7,23,26,27]. Classification starts by manual labelling of representative areas belonging to objects of interest and background. Next, by using various quantitative features (e.g., intensities, texture, and morphology) of the labelled area, the classifier can extend the local segmentation to cover the whole dataset. In some cases, the results can be improved when classification is combined with other methods, for example, the use of supervoxels with watershed [28] or graph-cut-based algorithms [29]. Usually, the use of supervoxels facilitates processing without significant degradation of segmentation results.\n\nMIB currently includes two classifiers. The first one (called membrane detection) is based on a protocol developed by Kaynig et al. [27] for membrane detection from EM images. However, it is also suitable for segmentation of organelles from EM (S2 Video) and LM datasets (Fig 3A). We have used it to detect ER from time-lapse LM videos when, because of the gradient of the background intensities and variety of shapes (sheets and tubules), the standard thresholding methods are insufficient. The second classifier (called supervoxel classification) was designed to be fast and is based on classification of superpixels (2-D images) or supervoxels (3-D volumes) generated by the simple linear iterative clustering (SLIC) algorithm [21]. This classification uses only basic image intensity properties (e.g., minimal, maximal, average intensity, and cuts through the histogram) of each supervoxel and its neighbours. It is powerful in detection of objects that have distinct intensity features, for example, fluorescently labelled cells or organelles.\n\nA graph-based semiautomatic segmentation in MIB starts by clustering of voxels to supervoxels [21] that are assigned to vertices of a graph, where the edges connecting vertices are defined by the difference between average intensities of the corresponding supervoxels. Once the user interactively labels the areas belonging to the target and background, MIB uses the maxflox/min-cut algorithm [30] to perform the segmentation. For objects that have distinct boundaries, the watershed transformation [31] is extremely efficient. The marker-controlled watershed segmentation can be applied to detect both 2-D and 3-D objects. In practice, labelling the object(s) and background on a single slice allows segmentation of membrane-enclosed organelles in 3-D, as demonstrated for segmentation of the nucleus (Fig 3B and S2 Video) [14]. Objects that do not have clear boundaries and therefore would not qualify for segmentation using watershed can be preprocessed with the gradient filter to generate the required boundaries. Watershed can also be used to separate merged 2-D and 3-D objects even in anisotropic datasets [32], as exemplified by the separation of lipid droplets (LDs) (Fig 3C). For processing of large volumes, the chop tool can be used to divide the initial volume into smaller datasets for parallel segmentation on multiple workstations. Import of the chopped images then automatically assembles the segmented blocks together.\n\nIn automated segmentation, an essential part of the workflow is the estimation of accuracy of the applied method. As MIB was designed for segmentation of various objects coming from multiple imaging modalities, finding suitable parameters for accuracy metrics would be challenging, and the current version does not offer any. Therefore, MIB is most suitable for the processing of moderately large datasets, where the workflow can still be interactive and a researcher approves each step iteratively.\n\n3-D Visualization and Quantification of Images and Models Are the Final Steps in Imaging\n\n3-D visualization is an important part of any modelling. In contrast to segmentation, there are good 3-D visualization programs available already. While MIB can be used to visualize the models (Fig 2A), programs specialized to visualization might be more suitable. From MIB, the results of the segmentation (models) can be directly visualized using MATLAB engine (Fig 2A), Fiji 3-D viewer [33,34], and Imaris or saved in formats that are compatible with other visualization programs, i.e., IMOD (Fig 2B) [6,35], Amira (Fig 2E), or 3D Slicer (Fig 2C and 2D; Fig 3B and 3C) [8]. In other cases, the models may be saved in the TIF format for free packages such as BioImageXD [5], Drishti [36], or Vaa3D (Fig 4) [37].\n\nFor full utilization of the acquired data, the visualization should be complemented with numerical analysis. MIB provides several tools for numerical analysis of shapes (e.g., size, eccentricity, perimeter, and orientation) and intensities (e.g., minimum, maximum, and average) of 2-D and 3-D objects. These calculated parameters can either be used for filtering of objects as a part of the segmentation protocol or be exported to MATLAB and Microsoft Excel (Fig 4) for further statistical analysis. When needed, the automatic measurements can be complemented with the manual measurements of angles, distances, and radii (Fig 4) that also include an intensity profile of the image under the measured areas.\n\nMIB Is a Freely Distributed Open-Source Program with a User-Friendly Graphical User Interface\n\nMIB is written with MATLAB, which is available for all common computer operating systems (Windows, Linux, and Mac OS). As a high-level scientific programming language, MATLAB’s program code is easy to understand, and, thus, its use for implementing image-processing routines is fast and cost efficient, not only for initial development but also for any enhancements of MIB with additional features, which can be achieved because of MIB’s open-source code. MATLAB has a large community of users who are developing and sharing algorithms using MATLAB Central File Exchange [38], an online library of over 20,000 user-contributed MATLAB files and toolboxes. Many of these submissions are dedicated to image processing and may easily be integrated into MIB, for example, as plug-ins. To support the development of plug-ins, MIB includes a description of its application programming interface that includes tutorials. MIB automatically detects all available plug-ins and initializes them during program start-up. For those researchers who are not familiar with MATLAB or who do not have a MATLAB license, we provide MIB as a stand-alone package (64-bit Windows and Mac OS) that can be freely downloaded and used on standard computers.\n\nMATLAB itself is mostly a collection of functions that may be difficult to use by novices. To improve the usability, MIB includes an intuitive graphical user interface with standard components such as a menu, toolbar, and panels in the main window (Fig 5A). The toolbar and panels provide fast access to the most essential features described earlier, while the menu is used to access less frequently used actions. Some of the panels can be changed to adapt to the specific needs of a scientific project. MIB is designed to take the challenges of color-blind researchers into account, as we have selected a default color palette in which each color appears as a distinctive shade for color-blind users [39]. Alternatively, the default color palette can easily be replaced by one of the other color-blind-friendly ready assembled palettes [40] or each color can be individually selected. Each image-processing manipulation is logged, and the logs are stored with the data for future reference. To overcome accidental errors or to test most suitable tools and parameters during image processing, MIB has a flexible undo system that can erase recent changes made to the data or model. The number of undo steps for both 2-D and 3-D actions can be individually customized, thereby allowing optimized memory usage. MIB has a large variety of key shortcuts that improve segmentation performance and minimize unnecessary mouse movements. All details about the program usage are well documented and available from online tutorials on the MIB website (Fig 5B) [17] or from a built-in help system accessed through the Help menu or via dedicated buttons in each panel and auxiliary windows.\n\nOne of our aims during MIB development was to create a freely distributed open-source platform that would also allow a smooth cross talk with other image-processing programs. Depending on the program, the integration was accomplished with either direct data exchange or by data format compatibilities. The open microscopy environment (OMERO) image server [41] can be directly accessed to download data, whereas the direct data exchange [33] with Imaris and Fiji [4] allows a large collection of their plug-ins to be used without generating space-consuming intermediate files. In cases where the direct link is not possible, the compatibility is achieved through use of common file formats. We anticipate that MIB will become a useful tool not only for biological researchers but also for mathematicians as a platform for implementation of new methods for image segmentation developed in MATLAB. We will also keep on upgrading and extending MIB with each new imaging project.\n\nSupporting Information"
}